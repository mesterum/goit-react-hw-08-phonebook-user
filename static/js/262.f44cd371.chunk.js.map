{"version":3,"file":"static/js/262.f44cd371.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook-user/./src/components/SignIn/SignIn.module.css?4c9a","components/SignIn/SignIn.jsx","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"SignIn_link__rE2pN\",\"btn\":\"SignIn_btn__gGyai\"};","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {NavLink } from \"react-router-dom\";\nimport style from './SignIn.module.css'\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n// import { useAuth } from 'hooks';\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/DanielaBadea/goit-react-hw-08-phonebook-user.git\">\n        GitHub Daniela Badea\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme();\n\nexport default function SignIn() {\nconst dispatch = useDispatch();\n// const {user} = useAuth();\nconst [errorMessage, setErrorMessage] = React.useState(\"\")\n\nconst handleSubmit = e => {\n  e.preventDefault();\n  const form = e.currentTarget;\n  const email = form.elements.email.value;\n  const password = form.elements.password.value;\n\n  if (email === '' || password === '') {\n    console.log(\"Email-ul sau parola sunt goale.\");\n    setErrorMessage(\"Email and password cannot be empty.\")\n    return;\n  }\n  /* const isValidEmail = email === user.email;\n  const isValidPassword = password === user.password;\n\n  if (!isValidEmail || !isValidPassword) {\n    console.log(\"Email-ul sau parola sunt incorecte.\");\n    // alert(\"Email-ul sau parola sunt incorecte.\");\n    setErrorMessage(\"The email or password is incorrect.\")\n    return;\n  }\n\n  console.log(\"Form values:\", {\n    email: email,\n    password: password,\n  }); */\n\n  dispatch(\n    logIn({\n      email: email,\n      password: password,\n    })\n  );\n\n  form.reset();\n};\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }} >\n            <LockOutlinedIcon/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n             {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              className={style.btn}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <NavLink to=\"/password\" variant=\"body2\" className={style.link}>\n                  Forgot password?\n                </NavLink>\n              </Grid>\n              <Grid item>\n                <NavLink to='/register' variant=\"body2\" className={style.link}>\n                  {\"Don't have an account? Sign Up\"}\n                </NavLink>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport SignIn from \"components/SignIn/SignIn\";\n\nconst Login = () =>{\n    return(\n        <>\n        <SignIn/>\n        </>\n    )\n}\nexport default Login;"],"names":["Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","SignIn","dispatch","useDispatch","_React$useState","React","_React$useState2","_slicedToArray","errorMessage","setErrorMessage","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","console","log","logIn","reset","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","style","Button","mb","className","Grid","container","item","xs","NavLink","to","_Fragment"],"sourceRoot":""}